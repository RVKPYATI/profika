import { useState } from "react";
export const Checkbox = ({ label }: { label?: string }) => {
  const [checked, setChecked] = useState(false);

  const handleToggle = () => {
    setChecked(!checked);
  };
  return (
    <div className="flex items-center gap-[10px]">
      <div
        onClick={handleToggle}
        className={`w-6 h-6 border-[1px] rounded-md flex items-center justify-center cursor-pointer ${
          checked
            ? "bg-white border-gray-colored"
            : "bg-white border-gray-colored"
        }`}
      >
        {checked && (
          <svg
            width="12"
            height="12"
            viewBox="0 0 12 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3.135 11.66C3.135 11.53 3.11 11.465 3.06 11.465L2.715 11.63C2.715 11.56 2.675 11.51 2.595 11.48L2.475 11.465C2.395 11.465 2.295 11.5 2.175 11.57C2.155 11.52 2.13 11.47 2.1 11.42C2.07 11.37 2.045 11.325 2.025 11.285C1.895 11.035 1.765 10.76 1.635 10.46C1.515 10.15 1.4 9.855 1.29 9.575C1.19 9.295 1.11 9.075 1.05 8.915C1.01 8.785 0.965 8.59 0.915 8.33C0.865 8.07 0.815 7.74 0.765 7.34C0.875 7.41 0.96 7.445 1.02 7.445C1.09 7.445 1.155 7.34 1.215 7.13C1.245 7.17 1.3 7.19 1.38 7.19C1.44 7.19 1.485 7.17 1.515 7.13L1.755 6.77L2.025 6.86H2.04C2.06 6.86 2.08 6.85 2.1 6.83C2.12 6.81 2.15 6.79 2.19 6.77C2.27 6.72 2.33 6.695 2.37 6.695L2.415 6.71C2.665 6.83 2.825 7.05 2.895 7.37C3.075 8.13 3.255 8.51 3.435 8.51C3.615 8.51 3.825 8.32 4.065 7.94C4.185 7.75 4.305 7.53 4.425 7.28C4.555 7.03 4.685 6.75 4.815 6.44C4.835 6.56 4.855 6.62 4.875 6.62C4.925 6.62 5.01 6.495 5.13 6.245C5.26 5.995 5.465 5.65 5.745 5.21C5.905 4.94 6.105 4.635 6.345 4.295C6.595 3.955 6.86 3.605 7.14 3.245C7.42 2.885 7.69 2.545 7.95 2.225C8.22 1.905 8.46 1.63 8.67 1.4C8.88 1.17 9.035 1.02 9.135 0.95C9.515 0.69 9.815 0.439999 10.035 0.2C10.025 0.269999 10.01 0.334999 9.99 0.395C9.98 0.445 9.975 0.48 9.975 0.499999C9.975 0.539999 9.995 0.559999 10.035 0.559999L10.455 0.349999V0.41C10.455 0.49 10.475 0.53 10.515 0.53C10.545 0.53 10.605 0.485 10.695 0.395C10.785 0.305 10.835 0.24 10.845 0.2L10.815 0.41L11.325 0.11L11.205 0.38C11.365 0.27 11.48 0.214999 11.55 0.214999C11.59 0.214999 11.62 0.239999 11.64 0.289999C11.66 0.329999 11.67 0.369999 11.67 0.41C11.67 0.469999 11.645 0.539999 11.595 0.62C11.545 0.7 11.48 0.795 11.4 0.904999C11.34 0.985 11.24 1.105 11.1 1.265C10.97 1.415 10.77 1.64 10.5 1.94C10.23 2.23 9.87 2.635 9.42 3.155C9.3 3.285 9.115 3.515 8.865 3.845C8.615 4.165 8.33 4.54 8.01 4.97C7.7 5.39 7.39 5.815 7.08 6.245C6.77 6.675 6.495 7.065 6.255 7.415C6.015 7.755 5.845 8.01 5.745 8.18L4.815 9.755C4.615 10.095 4.45 10.375 4.32 10.595C4.19 10.805 4.09 10.95 4.02 11.03C3.87 11.21 3.705 11.37 3.525 11.51L3.39 11.435L3.27 11.51L3.135 11.66Z"
              fill="#2D2E2F"
            />
          </svg>
        )}
      </div>
      {label ?? <span className="ml-2 text-gray-700">{label}</span>}
    </div>
  );
};
